@page "/products"
@using Syncfusion.Blazor;
@using Syncfusion.Blazor.Notifications;
@* @rendermode InteractiveServer *@
@attribute [StreamRendering(true)]
<div class="container">
    <div class="row">
        @if (Products.Count  > 0)
        {
            foreach (var item in Products)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-header">@item.Name</div>
                        <div class="card-body">
                            <img class="card-img-top" src="../images/@item.Image" height="250" />
                            @item.Description
                        </div>
                        <div class="card-footer">
                           <CartButton CartItem="item" />
                        </div>
                    </div>
                </div>

            }
        }
        else
        {
            <h6 class="text-center">Streaming....</h6>
            for (int i = 1; i <= 6; i++)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <SfSkeleton Shape="SkeletonType.Square" Effect="ShimmerEffect.Wave" Height="250px" Width="350px"></SfSkeleton>
                    </div>
                </div>
            }
        }
    </div>
</div>



@code {
    private List<Product> Products { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        await Task.Delay(5000);
        Products = new List<Product>()
        {
            new Product()
            {
                Id = 1,
                Name = "Tote Bag",
                Description = "A tote bag is a large bag than hobo and satchel type bag.",
                Image = "bag1.jpg"
            },
            new Product()
            {
                Id = 2,
                Name = "Satchel bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag2.jpg"
            },
             new Product()
            {
                Id = 3,
                Name = "Heemea bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag3.jpg"
            },
               new Product()
            {
                Id = 4,
                Name = "Heemeafaklfjaf bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag4.jpg"
            },
                new Product()
            {
                Id = 5,
                Name = "Hello bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag5.jpg"
            },
                   new Product()
            {
                Id = 6,
                Name = "fafa bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag6.jpg"
            },
                   new Product()
            {
                Id = 7,
                Name = "afaf bag",
                Description = "A Satchel bag is a rectangular leather bag that features a top handle",
                Image = "bag7.jpg"
            },
        };
    }
}
